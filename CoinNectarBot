<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>MoneyTag MiniApp â€” Watch & Earn</title>
  <link rel="stylesheet" href="style.css">
</head>
<body>
  <div class="container">
    <header>
      <h1>MoneyTag â€” Watch & Earn</h1>
      <p class="sub">1 Ad = <strong>1,000 BTTC</strong> Â· Daily limit: <strong>30</strong> Â· Minimum Withdraw: <strong>100,000 BTTC</strong></p>
    </header>

    <section class="status">
      <div>
        <div class="label">Your Balance</div>
        <div id="balance" class="big">0 BTTC</div>
      </div>
      <div>
        <div class="label">Today's Ads Watched</div>
        <div id="dailyCount" class="big">0 / 30</div>
      </div>
    </section>

    <section class="actions">
      <button id="watchAdBtn" class="primary">ðŸŽ¥ Watch Ad & Earn 1,000 BTTC</button>
      <div class="note">You can watch up to <strong>30</strong> ads per day</div>
    </section>

    <section class="withdraw">
      <h2>Withdraw</h2>
      <div class="form-row">
        <label>Binance ID / Wallet:</label>
        <input id="binanceId" placeholder="Enter your Binance ID (e.g. abc123...)" />
      </div>
      <div class="form-row">
        <label>Withdraw Amount (BTTC):</label>
        <input id="withdrawAmount" type="number" min="0" placeholder="100000 or more" />
      </div>
      <button id="withdrawBtn" class="secondary">Withdraw</button>
      <div id="withdrawMsg" class="msg"></div>
    </section>

    <section class="history">
      <h2>Withdraw History</h2>
      <ul id="historyList"></ul>
    </section>

    <div id="adModal" class="modal hidden">
      <div class="modal-content">
        <h3>Ad is playing...</h3>
        <p>Watch till the end to earn <strong>1,000 BTTC</strong></p>
        <div id="adTimer" class="timer">5</div>
        <button id="closeAd" class="ghost hidden">Close</button>
      </div>
    </div>

    <footer>
      <small>Demo app â€” data is stored locally. To enable real ads, integrate Monetag SDK and backend.</small>
    </footer>
  </div>

  <script src="script.js"></script>
</body>
</html>
:root {
  --bg:#f6f8fb;
  --card:#ffffff;
  --accent:#0b74ff;
  --muted:#6b7280;
  --danger:#e11d48;
}
*{box-sizing:border-box}
body{
  margin:0;
  font-family:Inter,system-ui,-apple-system,"Segoe UI",Roboto,"Helvetica Neue",Arial;
  background:var(--bg);
  color:#111827;
}
.container{max-width:760px;margin:20px auto;padding:20px}
header h1{margin:0;font-size:24px}
.sub{color:var(--muted);margin-top:6px}
.status{display:flex;gap:20px;margin-top:18px}
.status>div{
  background:var(--card);
  padding:14px;
  border-radius:10px;
  flex:1;
  box-shadow:0 2px 6px rgba(15,23,42,0.04);
}
.label{color:var(--muted);font-size:13px}
.big{font-weight:700;font-size:20px;margin-top:6px}
.actions{margin-top:18px}
button{cursor:pointer;border:0;padding:12px 16px;border-radius:10px;font-weight:600}
.primary{background:var(--accent);color:#fff;box-shadow:0 6px 18px rgba(11,116,255,0.12)}
.secondary{background:#fff;border:1px solid #e5e7eb;}
.ghost{background:transparent;border:1px dashed #cbd5e1;padding:8px 12px}
.note{color:var(--muted);margin-top:8px}
.withdraw{margin-top:22px;background:var(--card);padding:14px;border-radius:10px}
.form-row{display:flex;flex-direction:column;margin-bottom:10px}
.form-row input{padding:10px;border-radius:8px;border:1px solid #e5e7eb}
.msg{margin-top:8px;color:var(--danger)}
.history{margin-top:18px;background:var(--card);padding:14px;border-radius:10px}
.history ul{list-style:none;padding:0;margin:0}
.history li{padding:8px 0;border-bottom:1px dashed #eef2ff;font-size:14px}
footer{margin-top:14px;color:var(--muted);font-size:12px}
.modal{
  position:fixed;left:0;right:0;top:0;bottom:0;
  display:flex;align-items:center;justify-content:center;
  background:rgba(2,6,23,0.45);
}
.hidden{display:none}
.modal-content{
  background:#fff;
  padding:22px;
  border-radius:12px;
  text-align:center;
  width:320px;
}
.timer{font-size:32px;font-weight:700;margin:12px 0}
const REWARD_PER_AD = 1000;
const DAILY_AD_LIMIT = 30;
const MIN_WITHDRAW = 100000;
const STORAGE_KEY = 'moneytag_state_v1';

function todayKey() {
  const d = new Date();
  return `${d.getFullYear()}-${d.getMonth()+1}-${d.getDate()}`;
}

function loadState() {
  const raw = localStorage.getItem(STORAGE_KEY);
  if (!raw) {
    const init = { balance: 0, lastReset: todayKey(), dailyCount: 0, withdraws: [] };
    localStorage.setItem(STORAGE_KEY, JSON.stringify(init));
    return init;
  }
  const s = JSON.parse(raw);
  if (s.lastReset !== todayKey()) {
    s.dailyCount = 0;
    s.lastReset = todayKey();
    localStorage.setItem(STORAGE_KEY, JSON.stringify(s));
  }
  return s;
}

function saveState(s){ localStorage.setItem(STORAGE_KEY, JSON.stringify(s)); }

function formatNum(n){ return n.toLocaleString('en-US') + ' BTTC'; }

const balanceEl = document.getElementById('balance');
const dailyCountEl = document.getElementById('dailyCount');
const watchAdBtn = document.getElementById('watchAdBtn');
const adModal = document.getElementById('adModal');
const adTimer = document.getElementById('adTimer');
const closeAdBtn = document.getElementById('closeAd');
const withdrawBtn = document.getElementById('withdrawBtn');
const binanceIdInp = document.getElementById('binanceId');
const withdrawAmtInp = document.getElementById('withdrawAmount');
const withdrawMsg = document.getElementById('withdrawMsg');
const historyList = document.getElementById('historyList');

let state = loadState();
renderAll();

watchAdBtn.addEventListener('click', () => {
  if (state.dailyCount >= DAILY_AD_LIMIT) {
    alert('Daily ad limit reached.');
    return;
  }
  adModal.classList.remove('hidden');
  adTimer.innerText = '5';
  closeAdBtn.classList.add('hidden');

  let t = 5;
  const tick = setInterval(() => {
    t--;
    adTimer.innerText = t;
    if (t <= 0) {
      clearInterval(tick);
      adTimer.innerText = 'Done';
      closeAdBtn.classList.remove('hidden');
      state.balance += REWARD_PER_AD;
      state.dailyCount += 1;
      saveState(state);
      renderAll();
      setTimeout(() => alert(`âœ… You earned ${REWARD_PER_AD} BTTC!`), 200);
    }
  }, 1000);
});

closeAdBtn.addEventListener('click', () => adModal.classList.add('hidden'));

withdrawBtn.addEventListener('click', () => {
  withdrawMsg.innerText = '';
  const binanceId = binanceIdInp.value.trim();
  const amount = Number(withdrawAmtInp.value);
  if (!binanceId) return withdrawMsg.innerText = 'Please enter your Binance ID.';
  if (!amount || amount <= 0) return withdrawMsg.innerText = 'Enter a valid withdraw amount.';
  if (amount < MIN_WITHDRAW) return withdrawMsg.innerText = `Minimum withdraw is ${MIN_WITHDRAW} BTTC.`;
  if (amount > state.balance) return withdrawMsg.innerText = 'Insufficient balance.';

  const req = { time: new Date().toISOString(), amount, binanceId, status: 'pending' };
  state.balance -= amount;
  state.withdraws.unshift(req);
  saveState(state);
  renderAll();
  withdrawMsg.innerText = 'Withdraw request submitted (demo).';
  binanceIdInp.value = '';
  withdrawAmtInp.value = '';
});

function renderAll() {
  balanceEl.innerText = formatNum(state.balance);
  dailyCountEl.innerText = `${state.dailyCount} / ${DAILY_AD_LIMIT}`;
  watchAdBtn.disabled = state.dailyCount >= DAILY_AD_LIMIT;
  watchAdBtn.style.opacity = state.dailyCount >= DAILY_AD_LIMIT ? '0.6' : '1';
  watchAdBtn.innerText = state.dailyCount >= DAILY_AD_LIMIT
    ? 'Daily limit reached'
    : 'ðŸŽ¥ Watch Ad & Earn 1,000 BTTC';

  historyList.innerHTML = '';
  if (!state.withdraws.length) {
    const li = document.createElement('li');
    li.innerText = 'No withdraw history yet.';
    historyList.appendChild(li);
  } else {
    state.withdraws.forEach(w => {
      const li = document.createElement('li');
      li.innerHTML = `<strong>${w.amount.toLocaleString()} BTTC</strong> â†’ ${escapeHtml(w.binanceId)}<br><small>${new Date(w.time).toLocaleString()} Â· ${w.status}</small>`;
      historyList.appendChild(li);
    });
  }
}

function escapeHtml(s) {
  return s.replace(/[&<>"']/g, m => ({'&':'&amp;','<':'&lt;','>':'&gt;','"':'&quot;',"'":"&#39;'}[m]));
}
